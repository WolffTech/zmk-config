/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    behaviors {
        rpi: require_prior_idle {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Games {
            bindings = <&tog 4>;
            key-positions = <36 37 40 41>;
        };

        CTRL {
            bindings = <&kp LCTRL>;
            key-positions = <41 36>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB     &kp Q  &kp W                &kp E            &kp R              &kp T            &kp Y      &kp U               &kp I             &kp O                 &kp P           &kp BSPC
&kp ESCAPE  &kp A  &rpi LEFT_CONTROL S  &rpi LEFT_ALT D  &rpi LEFT_SHIFT F  &kp G            &kp H      &rpi RIGHT_SHIFT J  &rpi RIGHT_ALT K  &rpi RIGHT_CONTROL L  &rpi RCMD SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X                &kp C            &kp V              &kp B            &kp N      &kp M               &kp COMMA         &kp DOT               &kp FSLH        &kp ENTER
                                        &kp LGUI         &mo 1              &kp BACKSPACE    &kp SPACE  &mo 2               &kp LEFT_ALT
            >;
        };

        raise_layer {
            display-name = "Raise";
            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5    &kp NUMBER_6    &kp NUMBER_7    &kp NUMBER_8  &kp NUMBER_9     &kp N0          &trans
&trans  &trans        &trans        &trans        &trans        &trans    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &msc SCROLL_UP  &trans
&trans  &trans        &trans        &trans        &trans        &trans    &trans          &mkp LCLK       &mkp RCLK     &trans           &msc MOVE_DOWN  &trans
                                    &trans        &trans        &trans    &trans          &mo 3           &trans
            >;
        };

        lower_layer {
            display-name = "Lower";
            bindings = <
&trans  &trans     &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp TILDE      &kp CARET  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp GRAVE        &trans
&trans  &kp MINUS  &kp ASTERISK      &kp EQUAL       &kp UNDERSCORE        &kp DOLLAR     &kp LEFT   &kp DOWN               &kp UP           &kp RIGHT          &kp HASH         &trans
&trans  &kp PLUS   &kp PIPE          &kp AT          &kp SLASH             &kp PERCENT    &kp EXCL   &kp BACKSLASH          &kp AMPERSAND    &kp QUESTION       &kp EXCLAMATION  &trans
                                     &trans          &mo 3                 &trans         &trans     &trans                 &trans
            >;
        };

        command_layer {
            display-name = "Comm";
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4        &kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &trans
&trans      &kp C_PREV    &kp C_NEXT    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PLAY_PAUSE    &kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &trans
&kp LC(T)   &trans        &trans        &trans        &trans        &trans              &kp F11  &kp F12  &kp F13  &kp F14  &kp F15  &trans
                                        &trans        &trans        &trans              &trans   &trans   &trans
            >;
        };

        game_layer {
            display-name = "Game";
            bindings = <
&kp TAB     &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I             &kp O    &kp P     &kp BSPC
&kp ESCAPE  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K             &kp L    &kp SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA         &kp DOT  &kp FSLH  &kp ENTER
                          &kp LGUI  &mo 5  &kp SPACE    &kp SPACE  &mo 3  &kp LEFT_CONTROL
            >;
        };

        game2_layer {
            display-name = "Game#";
            bindings = <
&kp TAB     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5       &kp Y      &kp U  &kp I             &kp O    &kp P     &kp BSPC
&kp ESCAPE  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp N0       &kp H      &kp J  &kp K             &kp L    &kp SEMI  &kp SQT
&kp LSHFT   &kp Z         &kp X         &kp C         &kp V         &kp B        &kp N      &kp M  &kp COMMA         &kp DOT  &kp FSLH  &kp ENTER
                                        &kp LGUI      &mo 4         &kp SPACE    &kp SPACE  &mo 3  &kp LEFT_CONTROL
            >;
        };
    };
};
